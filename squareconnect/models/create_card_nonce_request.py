# coding: utf-8

"""
Copyright 2017 Square, Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""


from pprint import pformat
from six import iteritems
import re


class CreateCardNonceRequest(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, client_id=None, business_id=None, card_data=None, fingerprint=None, fingerprint_components_json=None, session_id=None, website_url=None):
        """
        CreateCardNonceRequest - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'client_id': 'str',
            'business_id': 'str',
            'card_data': 'RequestCardData',
            'fingerprint': 'str',
            'fingerprint_components_json': 'str',
            'session_id': 'str',
            'website_url': 'str'
        }

        self.attribute_map = {
            'client_id': 'client_id',
            'business_id': 'business_id',
            'card_data': 'card_data',
            'fingerprint': 'fingerprint',
            'fingerprint_components_json': 'fingerprint_components_json',
            'session_id': 'session_id',
            'website_url': 'website_url'
        }

        self._client_id = client_id
        self._business_id = business_id
        self._card_data = card_data
        self._fingerprint = fingerprint
        self._fingerprint_components_json = fingerprint_components_json
        self._session_id = session_id
        self._website_url = website_url

    @property
    def client_id(self):
        """
        Gets the client_id of this CreateCardNonceRequest.
        

        :return: The client_id of this CreateCardNonceRequest.
        :rtype: str
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """
        Sets the client_id of this CreateCardNonceRequest.
        

        :param client_id: The client_id of this CreateCardNonceRequest.
        :type: str
        """

        self._client_id = client_id

    @property
    def business_id(self):
        """
        Gets the business_id of this CreateCardNonceRequest.
        

        :return: The business_id of this CreateCardNonceRequest.
        :rtype: str
        """
        return self._business_id

    @business_id.setter
    def business_id(self, business_id):
        """
        Sets the business_id of this CreateCardNonceRequest.
        

        :param business_id: The business_id of this CreateCardNonceRequest.
        :type: str
        """

        self._business_id = business_id

    @property
    def card_data(self):
        """
        Gets the card_data of this CreateCardNonceRequest.
        

        :return: The card_data of this CreateCardNonceRequest.
        :rtype: RequestCardData
        """
        return self._card_data

    @card_data.setter
    def card_data(self, card_data):
        """
        Sets the card_data of this CreateCardNonceRequest.
        

        :param card_data: The card_data of this CreateCardNonceRequest.
        :type: RequestCardData
        """

        self._card_data = card_data

    @property
    def fingerprint(self):
        """
        Gets the fingerprint of this CreateCardNonceRequest.
        

        :return: The fingerprint of this CreateCardNonceRequest.
        :rtype: str
        """
        return self._fingerprint

    @fingerprint.setter
    def fingerprint(self, fingerprint):
        """
        Sets the fingerprint of this CreateCardNonceRequest.
        

        :param fingerprint: The fingerprint of this CreateCardNonceRequest.
        :type: str
        """

        self._fingerprint = fingerprint

    @property
    def fingerprint_components_json(self):
        """
        Gets the fingerprint_components_json of this CreateCardNonceRequest.
        

        :return: The fingerprint_components_json of this CreateCardNonceRequest.
        :rtype: str
        """
        return self._fingerprint_components_json

    @fingerprint_components_json.setter
    def fingerprint_components_json(self, fingerprint_components_json):
        """
        Sets the fingerprint_components_json of this CreateCardNonceRequest.
        

        :param fingerprint_components_json: The fingerprint_components_json of this CreateCardNonceRequest.
        :type: str
        """

        self._fingerprint_components_json = fingerprint_components_json

    @property
    def session_id(self):
        """
        Gets the session_id of this CreateCardNonceRequest.
        

        :return: The session_id of this CreateCardNonceRequest.
        :rtype: str
        """
        return self._session_id

    @session_id.setter
    def session_id(self, session_id):
        """
        Sets the session_id of this CreateCardNonceRequest.
        

        :param session_id: The session_id of this CreateCardNonceRequest.
        :type: str
        """

        self._session_id = session_id

    @property
    def website_url(self):
        """
        Gets the website_url of this CreateCardNonceRequest.
        

        :return: The website_url of this CreateCardNonceRequest.
        :rtype: str
        """
        return self._website_url

    @website_url.setter
    def website_url(self, website_url):
        """
        Sets the website_url of this CreateCardNonceRequest.
        

        :param website_url: The website_url of this CreateCardNonceRequest.
        :type: str
        """

        self._website_url = website_url

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
